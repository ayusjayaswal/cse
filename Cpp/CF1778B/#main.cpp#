#include <climits>
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

#define ll long long int
#define all(v) v.begin(), v.end()
#define getvec(v) for (auto &i : v) { cin >> i; }
#define fi(i, N) for (int i = 0; i < N; ++i)

void solve() {
    int n, m, d;
    cin >> n >> m >> d;
    vector<int> p(n);
    vector<int> a(m);
    getvec(p);
    getvec(a);
    const int INT_MAX1= 1e9;
    vector<int> pos(n + 1);
    fi(i, n) {
        pos[p[i]] = i;
    }

    int min_ops = INT_MAX1;
    fi(i, m - 1) {
        int first_pos = pos[a[i]];
        int second_pos = pos[a[i + 1]];

        if (second_pos > first_pos && second_pos - first_pos <= d) {
            min_ops = min(min_ops, second_pos - first_pos);

            if (first_pos + d + 1 < n) {
                min_ops = min(min_ops, d + 1 - (second_pos - first_pos));
            }
        }
    }

    cout << (min_ops == INT_MAX ? 0 : min_ops) << "\n";
}

int main() {
    // ios_base::sync_with_stdio(false); cin.tie(NULL);
    #ifdef ONLINE_JUDGE
    std::cerr.rdbuf(nullptr);
    #endif
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
    return 0;
}
